; RoboCom program

Published  Name        KIASS2                   ; Name of this program
Published  Author      YOUR_NAME                ; Name of author
Published  EMail       YOUR_EMAIL_ADDRESS       ; Author's e-mail address
Published  Country     YOUR_HOME_COUNTRY_HERE   ; Author's home country
Published  Comment     MAKE_A_COMMENT           ; A comment on this prog
Secret     Password    YOUR_PASSWORD_HERE       ; Password for competitons

Published  OpenSource  yes                      ; This prog is open source
Published  Language    RC300                    ; Written in RC300 language
Published  OptionSet   RC3 Standards            ; Recommended OptionSet

;reg 1: stores scan result
;reg 5: did we turn left
;reg 6: transfer Destroy_upstream(5) or Destroy_downstream(6)
;reg 20: are we master?
;reg 19: are we slave?

Bank Main           ;bank 1
  Scan #1           ;kijk op er een robot voor ons staat, sla op in reg 1
  comp #1, 0        ;is het veld voor ons leeg?
  bJump 3, 1        ;nee => kijk wat voor bot het is
  bJump 2, 1        ;ja => maak een bot voor ons
  @standby
  Jump @standby
  
Bank No_Bot         ;bank 2
  Create 2, 7, 0    ;nieuwe robot, instructie set 2, 5 banken, kan niet bewegen (0) 
  
  ;kan mislukken door race conditions daarom:
  Scan #1             ;kijk op er een robot voor ons staat, sla op in reg 1
  comp #1, 1          ;is er nu een bot met een andere kleur?  
  Jump @trans_regs    ;nee => ga verder
  bJump 4, 1          ;ja => race condition, beslis master vs slave
  
  @trans_regs
  Trans 1, 1        ;bank naar de nieuwe robot
  Trans 2, 2        ;bank naar de nieuwe robot
  Trans 3, 3        ;bank naar de nieuwe robot
  Trans 4, 4        ;bank naar de nieuwe robot
  Trans 5, 5        ;bank naar de nieuwe robot
  Trans 6, 6        ;bank naar de nieuwe robot
  Trans 7, 7        ;bank naar de nieuwe robot
  Set %Active, 1    ;activate the remote bot
  bJump 1, @standby ;go standby
  
Bank Bot_Detected   ;bank 3
  comp #1, 2        ;is de bot dezelfde kleur?
  bJump 4, 1        ;nee => beslis master/slave
  turn 0            ;ja => draai linksom
  set #5, 1         ;onthoud dat we naar links gedraaid hebben
  bJump 2, 1        ;plaats een robot voor ons
  
Bank Found_Other    ;band 4
                    ;only continue if master
  Set %Active, 0    ;deactivate the remote bot to become master
                    ;only reach this part if master
  set #20, 1        ;mark this robot as center
  
  ;tell the other color on in front to destroy all same colord save itself
  Trans 7, 1        ;transfer destroy same color program
  Set %Active, 1    ;activate the slave bot
  ;bJump 1, @standby ;FIXME remove this (testing only)
  
  ;delete the bots we used to get here
  bJump 7, 1
     
  
  ;TODO go around
  bJump 1, @standby ;TODO placeholder

Bank Destroy_upstream ;bank 5
  Jump 5              ;make sure then real code start at 5, since standby runs at 5
  Jump 4              ;make sure then real code start at 5, since standby runs at 5
  Jump 3              ;make sure then real code start at 5, since standby runs at 5
  Jump 2              ;make sure then real code start at 5, since standby runs at 5
  Jump 1              ;make sure then real code start at 5, since standby runs at 5
  Comp #5, 1          ;zijn we naar links gedraaid?
  Turn 0              ;nee -> keer om
  Turn 0              ;ja -> draai 90 naar rechts
  Trans 5, 1
  Die

Bank Destroy_downstream ;bank 6
  Jump 5                ;make sure then real code start at 5, since standby runs at 5
  Jump 4                ;make sure then real code start at 5, since standby runs at 5
  Jump 3                ;make sure then real code start at 5, since standby runs at 5
  Jump 2                ;make sure then real code start at 5, since standby runs at 5
  Jump 1                ;make sure then real code start at 5, since standby runs at 5
  Trans 6, 1
  Die
  
Bank Destroy_Same_Color ;bank 7
  Scan #1
  comp #1, 2        ;bot met zelfde kleur?
  Jump @scan2       ;nee -> draai en scan nog 3 maal
  Trans 6, 1        ;ja -> transfer destroy downstream program ;leaving out can do intresting things....
  
  @scan2
  turn 1
  Scan #1
  comp #1, 2        ;bot met zelfde kleur?
  Jump @scan3       ;nee -> draai en scan nog 3 maal
  Trans 5, 1        ;ja -> transfer destroy upstream program 

  @scan3
  turn 1
  Scan #1
  comp #1, 2        ;bot met zelfde kleur?
  Jump @scan4       ;nee -> draai en scan nog 3 maal
  Trans 5, 1        ;ja -> transfer destroy upstream program 

  @scan4
  turn 1
  Scan #1
  comp #1, 2                        ;bot met zelfde kleur?
  Jump @done_scanning               ;nee -> doe niks meer
  Trans 5, 1                        ;ja -> transfer destroy upstream program 

  @done_scanning
  comp #20, 1        ;zijn we master?
  Set #Active, 0     ;nee -> klaar
  
  bJump 1, @standby ;go standby
  ;Jump @destroy_same_color_standby

;ideeen: 
; 
; hoe kleur onderscheiden
; -na een turn verander een var, in principe is de eerste botsing tussen 
;  robots van verschillende kleuren
;
; -kijk na een botsing of een bericht geforward kan worden in een rechte lijn
;  zo nee dan is de botsing met een andere kleur robot
;
; -bot van andere kleur is een opponent? => JA, GAAN WE GEBRUIKEN

; hoe te beslissen welke bot master word en welke slave?
; -try to deactivate other bot before we get deactivated? (assuming deactivate = atomic)
; -remove pattern/remove bank? atomic???
; -daarna naar achteren alle nodes vernietigen (gaat sneller dan nieuwe maken)
;   vernietig door poison programma naar bank 5 te kopieeren
